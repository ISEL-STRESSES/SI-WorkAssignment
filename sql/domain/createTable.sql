-- Create domain
CREATE DOMAIN ALPHANUM AS VARCHAR(10) CHECK (VALUE ~* '^[A-Z0-9]+$'); 
-- CREATE DOMAIN INT4RANGE AS INT CHECK (VALUE >= 1 AND VALUE <= 5);
CREATE DOMAIN URL AS VARCHAR(255) CHECK (VALUE ~* '^(http|https)://[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(/\S*)?$');

-- Create table
-- RegiÃ£o
CREATE TABLE IF NOT EXISTS regiao (
    nome        VARCHAR(50) NOT NULL,
    
    CONSTRAINT pk_regiao PRIMARY KEY (nome),
);

-- Jogador
CREATE TABLE IF NOT EXISTS jogador (
    id          INT GENARATED BY DEFAULT AS IDENTITY,
    username    VARCHAR(50) NOT NULL,
    email       VARCHAR(50) NOT NULL,
    status      VARCHAR(50) NOT NULL,

    UNIQUE (username),
    UNIQUE (email),

    CONSTRAINT status_jogador CHECK (status in ('Ativo', 'Inativo' ou 'Banido')),
    CONSTRAINT pk_jogador PRIMARY KEY (id),
);

-- Jogador Estatistica
CREATE TABLE IF NOT EXISTS jogador_estatistica (
    id_jogador      INT REFERENCES jogador(id),
    nr_partidas     INT NOT NULL,
    nr_jogos        INT NOT NULL,
    total_pontos    INT NOT NULL,

    CONSTRAINT pk_jogador_estatistica PRIMARY KEY (id_jogador),
);

-- Compra
CREATE TABLE IF NOT EXISTS compra (
    data        DATE NOT NULL,
    preco       NUMERIC(10,2) NOT NULL,
);

-- Jogo
CREATE TABLE IF NOT EXISTS jogo (
    id          ALPHANUM,
    nome        VARCHAR(50) NOT NULL,
    url         URL NOT NULL,

    UNIQUE (nome),

    CONSTRAINT pk_jogo PRIMARY KEY (id),
);

-- Jogo Estatistica
CREATE TABLE IF NOT EXISTS jogo_estatistica (
    id_jogo         ALPHANUM REFERENCES jogo(id),
    nr_partidas     INT NOT NULL,
    nr_jogadores    INT NOT NULL,
    total_pontos    INT NOT NULL,

    CONSTRAINT pk_jogo_estatistica PRIMARY KEY (id_jogo),
);

-- Partida
CREATE TABLE IF NOT EXISTS partida (
    nr              SERIAL,
    data_inicio     DATE NOT NULL,
    data_fim        DATE NOT NULL,

    CONSTRAINT dete_constraint CHECK (data_inicio < data_fim),
);

-- Partida normal
CREATE TABLE IF NOT EXISTS partida_normal (
    nr_partida      int REFERENCES partida(nr),
    dificuldade     INT4RANGE NOT NULL,

    CONSTRAINT dificuldade_constraint CHECK (dificuldade in (1..5)),
);

-- Partida multijogador
CREATE TABLE IF NOT EXISTS partida_multijogador (
    nr_partida  int REFERENCES partida(nr),
    estado      VARCHAR(50) NOT NULL,

    CONSTRAINT estado_constraint CHECK (estado in ('Por iniciar', 'A aguardar jogadores', 'Em curso', 'Terminada')),
);

-- Cracha
CREATE TABLE IF NOT EXISTS cracha (
    nome            VARCHAR(50) NOT NULL,
    imagem          URL NOT NULL,
    limite_pontos   VARCHAR(50) NOT NULL,

    UNIQUE (nome),

);

-- Conversa
CREATE TABLE IF NOT EXISTS conversa (
    id          INT GENERATED BY DEFAULT AS IDENTITY,
    nome        VARCHAR(50) NOT NULL,

    CONSTRAINT pk_conversa PRIMARY KEY (id),
);

-- Mensagem
CREATE TABLE IF NOT EXISTS mensagem (
    nr_ordem  INT NOT NULL,
    texto     TEXT NOT NULL,
    data      DATE NOT NULL,
);