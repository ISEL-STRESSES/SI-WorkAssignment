BEGIN TRANSACTION;
-- Constants 
-- Global 
-- DECLARE nome_max_size CONSTANT INT := 50;
-- DECLARE status_max_size CONSTANT INT := 20;

-- Jogador
-- DECLARE email_max_size CONSTANT INT := 254;
-- DECLARE username_max_size CONSTANT INT := 50;
-- DECLARE init_status_value CONSTANT VARCHAR(20) := 'Inativo';

-- Partida Multijogador
-- DECLARE init_status_partida_multijogador CONSTANT VARCHAR(20) := 'Por iniciar';

-- Create domain
DROP DOMAIN IF EXISTS ALPHANUMERIC CASCADE;
DROP DOMAIN IF EXISTS email CASCADE;
DROP DOMAIN IF EXISTS url CASCADE;

CREATE DOMAIN ALPHANUMERIC AS VARCHAR(10) CHECK (VALUE ~* '^[A-Z0-9]+$');
CREATE DOMAIN URL AS VARCHAR(255) CHECK (VALUE ~* '^(http|https)://[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(/\S*)?$');
CREATE DOMAIN EMAIL AS VARCHAR(254) CHECK (VALUE ~* '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$');

-- Create table
-- Regi√£o
CREATE TABLE IF NOT EXISTS regiao(
    nome        VARCHAR(50) NOT NULL,
    
    CONSTRAINT pk_regiao PRIMARY KEY (nome)
);

-- Jogador
CREATE TABLE IF NOT EXISTS jogador(
    id          INT GENERATED BY DEFAULT AS IDENTITY,
    username    VARCHAR(50) NOT NULL,
    email       EMAIL NOT NULL,
    status      VARCHAR(20) DEFAULT 'Inativo',
    nome_regiao VARCHAR(50) NOT NULL,

    UNIQUE (username),
    UNIQUE (email),
    UNIQUE (username, email),

    CONSTRAINT status_jogador CHECK (status in ('Ativo', 'Inativo', 'Banido')),
    
    CONSTRAINT pk_jogador PRIMARY KEY (id),
    CONSTRAINT fk_jogador_regiao FOREIGN KEY (nome_regiao) REFERENCES regiao(nome)
);

-- Jogo
CREATE TABLE IF NOT EXISTS jogo(
    id          ALPHANUMERIC,
    nome        VARCHAR(50) NOT NULL,
    url         URL NOT NULL,

    UNIQUE (nome),

    CONSTRAINT pk_jogo PRIMARY KEY (id)
);

-- Conversa
CREATE TABLE IF NOT EXISTS conversa(
    id          INT GENERATED BY DEFAULT AS IDENTITY,
    nome        VARCHAR(50) NOT NULL,

    CONSTRAINT pk_conversa PRIMARY KEY (id)
);

-- Jogador Estatistica
CREATE TABLE IF NOT EXISTS jogador_estatistica(
    id_jogador      INT NOT NULL,
    nr_partidas     INT DEFAULT 0,
    nr_jogos        INT DEFAULT 0,
    total_pontos    INT DEFAULT 0,

    CONSTRAINT fk_jogador_estatistica FOREIGN KEY (id_jogador) REFERENCES jogador(id)
);

-- Jogo Estatistica
CREATE TABLE IF NOT EXISTS jogo_estatistica (
    id_jogo         ALPHANUMERIC ,
    nr_partidas     INT DEFAULT 0,
    nr_jogadores    INT DEFAULT 0,
    total_pontos    INT DEFAULT 0,

    CONSTRAINT fk_jogo_estatistica FOREIGN KEY (id_jogo) REFERENCES jogo(id)
);

-- Partida
CREATE TABLE IF NOT EXISTS partida(
    nr              SERIAL,
    data_inicio     DATE NOT NULL,
    data_fim        DATE NOT NULL,
    id_jogo         ALPHANUMERIC NOT NULL,
    nome_regiao     VARCHAR(50) NOT NULL,

    CONSTRAINT date_constraint CHECK (data_inicio < data_fim),
    
    CONSTRAINT pk_partida PRIMARY KEY (nr),
    CONSTRAINT fk_partida_jogo FOREIGN KEY (id_jogo) REFERENCES jogo(id),
    CONSTRAINT fk_partida_regiao FOREIGN KEY (nome_regiao) REFERENCES regiao(nome)
);

-- Partida normal
CREATE TABLE IF NOT EXISTS partida_normal(
    dificuldade     INT NOT NULL,
    pontuacao       INT NOT NULL,
    nr_partida      int NOT NULL,

    CONSTRAINT dificuldade_constraint CHECK (dificuldade BETWEEN 1 and 5),-- in INT4RANGE(1,5)),
    
    CONSTRAINT pk_partida_normal FOREIGN KEY (nr_partida) REFERENCES partida(nr)
);

-- Partida multijogador
CREATE TABLE IF NOT EXISTS partida_multijogador(
    estado      VARCHAR(20) DEFAULT 'Por iniciar',
    pontuacao   INT NOT NULL,
    nr_partida  int NOT NULL,

    CONSTRAINT estado_constraint CHECK (estado in ('Por iniciar', 'A aguardar jogadores', 'Em curso', 'Terminada')),
    
    CONSTRAINT pk_partida_multijogador FOREIGN KEY (nr_partida) REFERENCES partida(nr)
);

-- Cracha
CREATE TABLE IF NOT EXISTS cracha(
    nome            VARCHAR(50) NOT NULL,
    imagem          URL NOT NULL,
    limite_pontos   INT NOT NULL,
    id_jogo         ALPHANUMERIC NOT NULL,

    UNIQUE (nome),

    CONSTRAINT pk_cracha PRIMARY KEY (nome),
    CONSTRAINT fk_cracha FOREIGN KEY (id_jogo) REFERENCES jogo(id)
);

-- Mensagem
CREATE TABLE IF NOT EXISTS mensagem(
    nr_ordem  INT NOT NULL,
    texto     TEXT NOT NULL,
    data      DATE NOT NULL,
    id_jogador INT NOT NULL,
    id_conversa INT NOT NULL,

    CONSTRAINT pk_mensagem PRIMARY KEY (nr_ordem),
    CONSTRAINT fk_mensagem_jogador FOREIGN KEY (id_jogador) REFERENCES jogador(id),
    CONSTRAINT fk_mensagem_conversa FOREIGN KEY (id_conversa) REFERENCES conversa(id)
);

-- Compra (Jogador - Jogo)
CREATE TABLE IF NOT EXISTS compra(
    data        DATE NOT NULL,
    preco       MONEY DEFAULT 0 NOT NULL,
    id_jogador  INT NOT NULL,
    id_jogo     ALPHANUMERIC NOT NULL,

    -- CONSTRAINT pk_compra_jogador PRIMARY KEY (id_jogador) REFERENCES jogador(id),
    -- CONSTRAINT pk_compra_jogo PRIMARY KEY (id_jogo) REFERENCES jogo(id),
    CONSTRAINT fk_compra_jogador FOREIGN KEY (id_jogador) REFERENCES jogador(id),
    CONSTRAINT fk_compra_jogo FOREIGN KEY (id_jogo) REFERENCES jogo(id)
);

-- Joga (Jogador - Partida)
CREATE TABLE IF NOT EXISTS joga(
    id_jogador  INT NOT NULL,
    nr_partida  INT NOT NULL,

    -- CONSTRAINT pk_joga_jogador PRIMARY KEY (id_jogador) REFERENCES jogador(id),
    -- CONSTRAINT pk_joga_partida PRIMARY KEY (nr_partida) REFERENCES partida(nr),
    CONSTRAINT fk_joga_jogador FOREIGN KEY (id_jogador) REFERENCES jogador(id),
    CONSTRAINT fk_joga_partida FOREIGN KEY (nr_partida) REFERENCES partida(nr)
);

-- Ganha (Jogador - Cracha)
CREATE TABLE IF NOT EXISTS ganha(
    id_jogador  INT NOT NULL,
    nome_cracha VARCHAR(50) NOT NULL,

    -- CONSTRAINT pk_ganha_jogador PRIMARY KEY (id_jogador) REFERENCES jogador(id),
    -- CONSTRAINT pk_ganha_cracha PRIMARY KEY (nome_cracha) REFERENCES cracha(nome),
    CONSTRAINT fk_ganha_jogador FOREIGN KEY (id_jogador) REFERENCES jogador(id),
    CONSTRAINT fk_ganha_cracha FOREIGN KEY (nome_cracha) REFERENCES cracha(nome)
);

-- Participa (Jogador - Conversa)
CREATE TABLE IF NOT EXISTS participa(
    id_jogador  INT NOT NULL,
    id_conversa INT NOT NULL,

    -- CONSTRAINT pk_participa_jogador PRIMARY KEY (id_jogador) REFERENCES jogador(id),
    -- CONSTRAINT pk_participa_conversa PRIMARY KEY (id_conversa) REFERENCES conversa(id),
    CONSTRAINT fk_participa_jogador FOREIGN KEY (id_jogador) REFERENCES jogador(id),
    CONSTRAINT fk_participa_conversa FOREIGN KEY (id_conversa) REFERENCES conversa(id)
);

-- Amigo
CREATE TABLE IF NOT EXISTS amigo(
    id_jogador1 INT NOT NULL,
    id_jogador2 INT NOT NULL,

    -- CONSTRAINT pk_amigo_jogador1 PRIMARY KEY (id_jogador1) REFERENCES jogador(id),
    -- CONSTRAINT pk_amigo_jogador2 PRIMARY KEY (id_jogador2) REFERENCES jogador(id),
    CONSTRAINT fk_amigo_jogador1 FOREIGN KEY (id_jogador1) REFERENCES jogador(id),
    CONSTRAINT fk_amigo_jogador2 FOREIGN KEY (id_jogador2) REFERENCES jogador(id)
);

COMMIT;
